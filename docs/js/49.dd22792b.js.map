{"version":3,"file":"js/49.dd22792b.js","mappings":"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","sources":["webpack://colors-to-color-palette/./src/views/Chartjs3View.vue?80b1","webpack://colors-to-color-palette/./src/modules/pdf-generator/helpers/pdf-generator.js","webpack://colors-to-color-palette/src/views/Chartjs3View.vue","webpack://colors-to-color-palette/./src/views/Chartjs3View.vue?8e1f","webpack://colors-to-color-palette/./src/views/Chartjs3View.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chartjs3-view\"},[_c('canvas',{ref:\"canvas\"}),_c('div',[_c('button',{on:{\"click\":function($event){return _vm.exportChartToSvg()}}},[_vm._v(\"Exportar SVG\")]),_c('button',{on:{\"click\":function($event){return _vm.handleOpenPDF()}}},[_vm._v(\"Abrir PDF\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import pdfMake from \"pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\n\n// Importa src das imagens no assets\nimport srcPngImg from \"@/assets/images/img-png.png\";\nimport srcJpgImg from \"@/assets/images/img-jpg.jpg\";\nimport srcSvgImg from \"@/assets/images/img-svg.svg\";\n\n// https://stackoverflow.com/questions/46856550/pdfmake-roboto-regular-ttf-not-found-in-virtual-file-system-only-after-gulp\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nasync function generatePDF(svgChart) {\n  const srcSvgImgTxt = await (await fetch(srcSvgImg)).text();\n\n  const docDefinition = {\n    info: {\n      title: \"Criando PDF com gráficos SVG.\",\n      author: \"guilhermerodrigues680\",\n      subject:\n        \"Criando PDF com gráficos SVG usando PDFMake, Chart.js v3 e canvas2svg. Esse projeto é apenas uma prova de conceito.\",\n      creator: \"github.com/guilhermerodrigues680/pdfmake-with-chart\",\n    },\n    // pageSize: {\n    //   width: canvas.width,\n    //   height: \"auto\",\n    // },\n    // [left, top, right, bottom] or [horizontal, vertical] or just a number for equal margins\n    // pageMargins: [0, 0, 0, 0],\n    content: [\n      {\n        columns: [\n          {\n            image: \"img1\",\n            width: \"*\",\n            fit: [80, 80],\n            alignment: \"left\",\n          },\n          {\n            svg: srcSvgImgTxt,\n            width: \"*\",\n            fit: [50, 50],\n            alignment: \"right\",\n            margin: [0, 15, 0, 0],\n          },\n        ],\n      },\n      {\n        margin: [0, 64, 0, 32],\n        columns: [\n          {\n            text: \"Multiple styles applied\",\n            fontSize: 35,\n            bold: true,\n            color: \"#4297FA\",\n            width: \"*\",\n          },\n          {\n            image: \"img2\",\n            fit: [226, 180],\n            width: \"*\",\n            alignment: \"right\",\n          },\n        ],\n      },\n      \"SVG nodes behave similar to images by supporting width/height or fit\",\n      \"It is however not yet possible to use svg files or to have a library of svgs in the document definition\",\n      \"\\n\",\n      \"Note that before you can use SVG nodes you must install svg-to-pdfkit as it is not included with pdfmake to keep bundle size down\",\n      {\n        text: \"You can also fit the svg inside a rectangle\",\n        pageBreak: \"after\",\n      },\n      \"Gráfico SVG\",\n      // {\n      //   svg: svgChart,\n      //   fit: [300, 300],\n      // },\n      // // https://github.com/bpampuch/pdfmake/blob/master/src/standardPageSizes.js\n      // {\n      //   text: \"text 3\",\n      //   absolutePosition: { x: 595.28 / 2, y: 841.89 / 2 },\n      // },\n      {\n        svg: svgChart,\n        fit: [300, 300],\n        absolutePosition: { x: 0, y: 841.89 / 2 },\n      },\n    ],\n\n    images: {\n      img1: new URL(srcJpgImg, window.location).toString(),\n      img2: new URL(srcPngImg, window.location).toString(),\n    },\n\n    // styles: {\n    //   rightme: {\n    //     alignment: \"right\",\n    //   },\n    // },\n  };\n\n  const pdfDoc = pdfMake.createPdf(docDefinition);\n\n  return new Promise((resolve) => pdfDoc.getBlob((blob) => resolve(blob)));\n}\n\nexport { generatePDF };\n","<template>\n  <div class=\"chartjs3-view\">\n    <canvas ref=\"canvas\"></canvas>\n    <div>\n      <button @click=\"exportChartToSvg()\">Exportar SVG</button>\n      <button @click=\"handleOpenPDF()\">Abrir PDF</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { saveAs } from \"file-saver\";\nimport Chart from \"chart.js/auto\";\nimport C2S from \"@/modules/export/helpers/canvas2svg-with-tweak\";\nimport { generatePDF } from \"@/modules/pdf-generator/helpers/pdf-generator\";\n\nconst data = {\n  labels: [0, 1, 2, 3, 4],\n  datasets: [\n    {\n      label: \"Dataset 1\",\n      data: [10, 11, 12, 13, 14],\n      backgroundColor: \"#FF0000\",\n    },\n    {\n      label: \"Dataset 2\",\n      data: [20, 21, 22, 23, 24],\n      backgroundColor: \"#0000FF\",\n    },\n    {\n      label: \"Dataset 3\",\n      data: [30, 31, 32, 33, 34],\n      backgroundColor: \"#00FF00\",\n    },\n  ],\n};\n\n/** @type {import('chart.js').ChartConfiguration} */\nconst config = {\n  type: \"bar\",\n  data: data,\n  options: {\n    plugins: {\n      title: {\n        display: true,\n        text: \"Chart.js Bar Chart - Stacked\",\n      },\n    },\n    // desablitar maintainAspectRatio permite criar gráficos de qualquer tamanho.\n    // maintainAspectRatio: false,\n    // desabilitar responsive e animations faz o canvas2svg funcionar.\n    responsive: false,\n    animation: false,\n\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n      },\n    },\n  },\n};\n\nexport default {\n  name: \"Chartjs3View\",\n\n  data: () => ({\n    // Técnica para o vue não deixar o objeto reativo\n    chart: Object.freeze({ chart: null }),\n  }),\n\n  mounted() {\n    this.run();\n  },\n\n  methods: {\n    run() {\n      // set the output dimensions (helpful especially for PNG)\n      const width = 300;\n      const height = 200;\n\n      // set the chart's size based on the values we set at the top\n      /** @type {{canvas: HTMLCanvasElement}} */\n      const { canvas } = this.$refs;\n      canvas.width = width;\n      canvas.height = height;\n\n      // create the chart\n      const chart = new Chart(canvas, config);\n      this.chart = Object.freeze({ chart });\n\n      console.debug({ chart });\n    },\n\n    async handleOpenPDF() {\n      // TODO: refatorar\n      const { chart } = this.chart;\n      console.debug({ chart });\n      if (chart.options.animation !== false) {\n        console.warn(\n          'Cannot create SVG: \"animation\" is not set to false (see the options section)'\n        );\n        return;\n      }\n      if (chart.options.responsive !== false) {\n        console.warn(\n          'Cannot create SVG: \"responsive\" is not set to false (see the options section)'\n        );\n        return;\n      }\n\n      /** @type {{canvas: HTMLCanvasElement}} */\n      const { canvas } = this.$refs;\n      const chartCanvas = canvas;\n      const svgContext = new C2S(chartCanvas.offsetWidth, chartCanvas.offsetHeight);\n      new Chart(svgContext, config);\n      const mySerializedSVG = svgContext.getSerializedSvg();\n      const svg = svgContext.getSvg();\n      console.debug({ mySerializedSVG, svg });\n\n      const blob = await generatePDF(mySerializedSVG);\n      window.open(URL.createObjectURL(blob), \"_blank\");\n    },\n\n    exportChartToSvg() {\n      const { chart } = this.chart;\n      console.debug({ chart });\n      if (chart.options.animation !== false) {\n        console.warn(\n          'Cannot create SVG: \"animation\" is not set to false (see the options section)'\n        );\n        return;\n      }\n      if (chart.options.responsive !== false) {\n        console.warn(\n          'Cannot create SVG: \"responsive\" is not set to false (see the options section)'\n        );\n        return;\n      }\n\n      console.debug({ C2S });\n\n      /** @type {{canvas: HTMLCanvasElement}} */\n      const { canvas } = this.$refs;\n      const chartCanvas = canvas;\n\n      // get the dimensions of our original chart\n      // create an svg version of the chart\n      const svgContext = new C2S(chartCanvas.offsetWidth, chartCanvas.offsetHeight);\n\n      console.debug({ svgContext });\n\n      const svgChart = new Chart(svgContext, config);\n\n      console.debug({ svgChart });\n\n      //serialize your SVG\n      const mySerializedSVG = svgContext.getSerializedSvg(); //true here, if you need to convert named to numbered entities.\n      //If you really need to you can access the shadow inline SVG created by calling:\n      const svg = svgContext.getSvg();\n      console.debug({ mySerializedSVG, svg });\n\n      const filename = \"mySerializedSVG.svg\";\n      const blob = new Blob([mySerializedSVG], { type: \"image/svg+xml\" });\n      saveAs(blob, filename);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.chartjs3-view {\n  width: 90%;\n  margin: 2em auto 0 auto;\n}\n\ncanvas {\n  display: block;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Chartjs3View.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Chartjs3View.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Chartjs3View.vue?vue&type=template&id=98382e9e&scoped=true&\"\nimport script from \"./Chartjs3View.vue?vue&type=script&lang=js&\"\nexport * from \"./Chartjs3View.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Chartjs3View.vue?vue&type=style&index=0&id=98382e9e&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"98382e9e\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","on","$event","exportChartToSvg","_v","handleOpenPDF","staticRenderFns","async","generatePDF","svgChart","srcSvgImgTxt","fetch","srcSvgImg","text","docDefinition","info","title","author","subject","creator","content","columns","image","width","fit","alignment","svg","margin","fontSize","bold","color","pageBreak","absolutePosition","x","y","images","img1","URL","srcJpgImg","window","location","toString","img2","srcPngImg","pdfDoc","pdfMake","Promise","resolve","getBlob","blob","pdfFonts","data","labels","datasets","label","backgroundColor","config","type","options","plugins","display","responsive","animation","scales","stacked","name","chart","mounted","methods","run","canvas","console","mySerializedSVG","C2S","svgContext","saveAs","component"],"sourceRoot":""}